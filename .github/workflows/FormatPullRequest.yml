name: "Reusable Format Pull Request Workflow"

on:
  workflow_call:
    inputs:
      directory:
        description: "The directory on which Runic needs to be run"
        default: "."
        required: false
        type: string
      julia-version:
        description: "Julia version"
        default: "1"
        required: false
        type: string
      runic-version:
        description: "Version of Runic to use"
        default: "1"
        required: false
        type: string

jobs:
  format-pull-request:
    name: "Format Pull Request"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Setup Julia ${{ inputs.julia-version }}"
        uses: julia-actions/setup-julia@v2
        with: 
          version: "${{ inputs.julia-version }}"
          arch: "${{ runner.arch }}"

      - uses: julia-actions/cache@v2

      - name: Run Runic
        uses: fredrikekre/runic-action@v1
        with:
          version: "${{ inputs.runic-version }}"
          format_files: true
        continue-on-error: true
        
      # Detect whether any files changed (tracked files) after formatting.
      # We'll use this to conditionally bump the version and open a PR.
      - name: Detect formatting changes
        id: changes
        shell: bash
        working-directory: ${{ inputs.directory }}
        run: |
          if ! git diff --quiet; then
            echo "changes=true" >> "$GITHUB_OUTPUT"
          else
            echo "changes=false" >> "$GITHUB_OUTPUT"
          fi
      

      # Only bump the patch version if formatting actually changed files
      - name: Bump patch version
        if: steps.changes.outputs.changes == 'true'
        shell: julia --color=yes {0}
        run: |
          import Pkg
          project_file = "Project.toml"
          project = Pkg.Types.read_project(project_file)
          project.version = Base.nextpatch(project.version)
          Pkg.Types.write_project(project, project_file)

      # Create a PR only if files changed (i.e., formatting needed fixes)
      - name: Create Pull Request
        if: steps.changes.outputs.changes == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Format .jl files (Runic)"
          title: "Automatic Runic.jl run"
          branch: auto-runic-pr
          delete-branch: true

      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
